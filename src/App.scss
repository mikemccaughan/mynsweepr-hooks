:root {
  --columns: 9;
  --rows: 9;
  --block-size: 32px;
}

body {
  margin: 0 auto;
  display: flex;
  flex-flow: column nowrap;
  min-height: 100vh;
  max-width: max-content;
  overflow-x: auto;
}

#root {
  display: flex;
  flex-flow: column nowrap;
  margin: 0 auto;
}

header {
  flex: 0 1 10vh;
  margin-bottom: 1rem;
  padding: 1rem;
}

main {
  flex: 1 1 80vh;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: flex-start;
}

aside {
  padding: 1rem;
}

aside > span {
  margin-right: 1rem;
}

footer {
  flex: 0 1 10vh;
}

header ul {
  margin: 0;
  padding: 0;
  text-indent: 0;
  display: flex;
  justify-content: space-evenly;
}

header li {
  display: flex;
  list-style-type: none;
}

header label span {
  margin: 0 0.25rem;
}

.board {
  margin: 0 auto;
  height: calc(var(--rows) * var(--block-size));
  width: calc(var(--columns) * var(--block-size));
  display: grid;
  grid-template-columns: repeat(var(--columns), var(--block-size));
  grid-template-rows: repeat(var(--rows), var(--block-size));
}

.cell:hover {
  transform: scale(1.25);
}
.cell {
  cursor: pointer;
  width: var(--block-size);
  height: var(--block-size);
  border: 1px outset #ececec;
  border-radius: 0;
  margin: 0;
  padding: 0;
  transition: transform 250ms ease-out;
}
.cell.hidden {
  background-color: lightblue;
  border-color: lightblue;
  color: lightblue;
}
.cell.hidden:active {
  background-color: orange;
  border-color: orange;
  color: orange;
}
.cell.flag {
  background-color: lightgoldenrodyellow;
  border-color: lightgoldenrodyellow;
}
.cell.flag::before {
  content: 'ðŸš©';
}
.cell.mine:not(.hidden):not(.flag) {
  background-color: red;
  border-color: red;
  font-size: 0;
}
.cell.mine:not(.hidden):not(.flag)::before {
  content: 'ðŸ’£';
  font-size: 1rem;
}
.cell.nearby:not(.hidden):not(.flag) {
  background-color: white;
  color: black;
}
.cell[data-val="0"]:not(.hidden):not(.flag) {
  background-color: white;
  border-color: #e0e0e0aa;
  border-style: solid;
  color: white;
}